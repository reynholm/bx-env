
version: '3.8'

services:

  memcache:
    image: memcached:alpine
    container_name: bx-memcache
    restart: always
    networks:
      bx:
        aliases:
          - memcache

  redis:
    image: redis
    container_name: bx-redis
    restart: always
    networks:
      bx:
        aliases:
          - redis

  push-server-sub:
    image: ikarpovich/bitrix-push-server
    container_name: bx-push-sub
    restart: always
    build:
      context: ./push-server
    environment:
      - REDIS_HOST=redis
      - LISTEN_HOSTNAME=0.0.0.0
      - LISTEN_PORT=80
      - SECURITY_KEY=${BX_PUSH_SECURITY_KEY}
      - MODE=sub
      - VIRTUAL_HOST=${BX_PUSH_SUB_HOST}
      - VIRTUAL_PORT=80
    expose:
      - 80
    labels:
      - traefik.port=80
      - traefik.protocol=http
      - traefik.frontend.rule=Host:${BX_PUSH_SUB_HOST}
    networks:
      bx:
        aliases:
          - ${BX_PUSH_SUB_HOST}
      proxy:
        aliases:
          - ${BX_PUSH_SUB_HOST}

  push-server-pub:
    image: ikarpovich/bitrix-push-server
    container_name: bx-push-pub
    restart: always
    build:
      context: ./push-server
    environment:
      - REDIS_HOST=redis
      - LISTEN_HOSTNAME=0.0.0.0
      - LISTEN_PORT=80
      - SECURITY_KEY=${BX_PUSH_SECURITY_KEY}
      - MODE=pub
      - VIRTUAL_HOST=${BX_PUSH_PUB_HOST}
      - VIRTUAL_PORT=80
    expose:
      - 80
    networks:
      bx:
        aliases:
          - ${BX_PUSH_PUB_HOST}
      proxy:
        aliases:
          - ${BX_PUSH_PUB_HOST}

  mysql:
    build:
      context: ./mysql
      args:
        - BX_MYSQL_IMAGE=${BX_MYSQL_IMAGE}
    container_name: bx-mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${BX_MYSQL_ROOT_PASSWORD}
      - BX_MYSQL_IMAGE=${BX_MYSQL_IMAGE}
    ports:
      - ${BX_MYSQL_PORT}:3306
    volumes:
      - mysql_data:/var/lib/mysql
      - ${BX_LOGS_PATH}/mysql:/var/log/mysql
    networks:
      bx:
        aliases:
          - mysql

  php-fpm:
    build:
      context: ./php${BX_PHP_VERSION}
      args:
        - BX_XDEBUG_IP=${BX_XDEBUG_IP}
        - BX_XDEBUG_PORT=${BX_XDEBUG_PORT}
        - BX_DEFAULT_CHARSET=${BX_DEFAULT_CHARSET}
        - CONTAINER_UID=${BX_CONTAINER_UID}
        - CONTAINER_GID=${BX_CONTAINER_GID}
        - CONTAINER_USER=bx
        - CONTAINER_GROUP=bx
        - BX_SMTP_PORT=${BX_SMTP_PORT}
        - BX_SMTP_FROM=${BX_SMTP_FROM}
    container_name: bx-php-fpm
    restart: always
    environment:
      - CONTAINER_UID=${BX_CONTAINER_UID}
      - CONTAINER_GID=${BX_CONTAINER_GID}
      - CONTAINER_USER=bx
      - CONTAINER_GROUP=bx
      - BX_SMTP_PORT=${BX_SMTP_PORT}
      - BX_SMTP_FROM=${BX_SMTP_FROM}
    volumes:
      - ${BX_LOGS_PATH}/php-fpm:/var/log/php-fpm
      - bx-public:/var/www/public_html
      - bx-modules:/media/bitrix/modules
    extra_hosts:
      - ${BX_UPDATE_HOST}
    networks:
      bx:
        aliases:
          - php-fpm

  mkcert:
    image: aegypius/mkcert-for-nginx-proxy
    container_name: bx-mkcert
    restart: unless-stopped
    volumes:
      - ssl-certs:/app/certs:rw
      - ~/.pki/nssdb:/root/.pki/nssdb:rw
      - ~/.mozilla/firefox:/root/.mozilla/firefox:rw
      - ${CA_STORE:-/usr/local/share/ca-certificates}:/usr/local/share/ca-certificates
      - /var/run/docker.sock:/var/run/docker.sock:ro

  proxy:
    image: nginxproxy/nginx-proxy
    container_name: bx-proxy
    labels:
      com.github.aegypius.mkcert-for-nginx-proxy.nginx_proxy: ''
    networks:
      proxy: { }
    ports:
      - published: ${BX_HTTP_PORT}
        target: 80
      - published: ${BX_HTTPS_PORT}
        target: 443
    restart: unless-stopped
    volumes:
      - ssl-certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro

  nginx:
    build:
      context: ./nginx
      args:
        - CONTAINER_UID=${BX_CONTAINER_UID}
        - CONTAINER_GID=${BX_CONTAINER_GID}
        - CONTAINER_USER=bx
        - CONTAINER_GROUP=bx
    expose:
      - 80
    container_name: bx-nginx
    restart: always
    environment:
      - BX_DEFAULT_HOST=${BX_DEFAULT_HOST}
      - BX_DEFAULT_LOCAL_DOMAIN=${BX_DEFAULT_LOCAL_DOMAIN}
      - BX_HOST_AUTOCREATE=${BX_HOST_AUTOCREATE}
      - CONTAINER_UID=${BX_CONTAINER_UID}
      - CONTAINER_GID=${BX_CONTAINER_GID}
      - CONTAINER_USER=bx
      - CONTAINER_GROUP=bx
      - VIRTUAL_HOST=${BX_HTTPS_HOSTS}
      - VIRTUAL_PORT=80
    volumes:
      - ${BX_LOGS_PATH}/nginx:/var/log/nginx
      - bx-public:/var/www/public_html
      - bx-modules:/media/bitrix/modules
    networks:
      bx:
        aliases:
          - nginx
      proxy:
        aliases:
          - nginx

  node:
    build:
      context: ./node
    container_name: bx-node
    restart: always
    volumes:
      - bx-public:/var/www/public_html
      - bx-modules:/media/bitrix/modules
    networks:
      bx:
        aliases:
          - node

  fakesmtp:
    image: gessnerfl/fake-smtp-server
    container_name: bx-fakesmtp
    restart: always
    networks:
      bx:
        aliases:
          - fakesmtp
    ports:
      - ${BX_SMTP_WEB_PORT}:5080
      - ${BX_SMTP_REST_PORT}:5081
      - ${BX_SMTP_PORT}:5025

networks:
  bx:
  proxy:
    driver: bridge

volumes:
  mysql_data:
  ssl-certs:
  bx-modules:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${BX_MODULES_PATH}
  bx-public:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${BX_PUBLIC_HTML_PATH}